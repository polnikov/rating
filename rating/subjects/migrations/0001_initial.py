# Generated by Django 3.2.12 on 2022-08-15 18:26

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_currentuser.db.models.fields
import django_currentuser.middleware


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('students', '0001_initial'),
        ('groups', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Cathedra',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Кафедра')),
                ('short_name', models.CharField(blank=True, max_length=10, unique=True, verbose_name='Сокращение')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='Запись создана')),
                ('updated_date', models.DateTimeField(auto_now=True, verbose_name='Запись обновлена')),
            ],
            options={
                'verbose_name': 'Кафедры',
                'verbose_name_plural': 'Кафедры',
                'ordering': ['faculty', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Faculty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Полное название факультета')),
                ('short_name', models.CharField(blank=True, max_length=10, verbose_name='Сокращение (аббревиатура)')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='Запись создана')),
                ('updated_date', models.DateTimeField(auto_now=True, verbose_name='Запись обновлена')),
            ],
            options={
                'verbose_name': 'Факультеты',
                'verbose_name_plural': 'Факультеты',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='SubjectLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('field', models.CharField(max_length=25, verbose_name='Свойство')),
                ('old_value', models.TextField(max_length=255, null=True, verbose_name='Было')),
                ('new_value', models.TextField(max_length=255, verbose_name='Стало')),
                ('timestamp', models.DateTimeField(auto_now=True, verbose_name='Дата и время изменения')),
                ('record_id', models.IntegerField(verbose_name='id записи')),
                ('user', django_currentuser.db.models.fields.CurrentUserField(default=django_currentuser.middleware.get_current_authenticated_user, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Автор')),
            ],
            options={
                'verbose_name': 'Изменения в дисциплинах',
                'verbose_name_plural': 'Изменения в дисциплинах',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, verbose_name='Дисциплина')),
                ('form_control', models.CharField(choices=[('Экзамен', 'Экзамен'), ('Диффзачет', 'Диффзачет'), ('Зачет', 'Зачет'), ('Курсовой проект', 'Курсовой проект'), ('Курсовая работа', 'Курсовая работа')], max_length=15, verbose_name='Форма контроля')),
                ('teacher', models.CharField(blank=True, help_text='Фамилия И.О.', max_length=150, verbose_name='Преподаватель')),
                ('att_date', models.DateField(blank=True, null=True, verbose_name='Дата аттестации')),
                ('comment', models.CharField(blank=True, default='', max_length=255, verbose_name='Примечание')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='Запись создана')),
                ('updated_date', models.DateTimeField(auto_now=True, verbose_name='Запись обновлена')),
                ('cathedra', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='subjects.cathedra', verbose_name='Кафедра')),
                ('semester', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='students.semester', verbose_name='Семестр')),
            ],
            options={
                'verbose_name': 'Дисциплины',
                'verbose_name_plural': 'Дисциплины',
                'ordering': ['semester', 'name', '-form_control', 'cathedra', 'att_date'],
            },
        ),
        migrations.AddField(
            model_name='cathedra',
            name='faculty',
            field=models.ForeignKey(blank=True, default=0, null=True, on_delete=django.db.models.deletion.SET_NULL, to='subjects.faculty', verbose_name='Факультет'),
        ),
        migrations.CreateModel(
            name='GroupSubject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='Запись создана')),
                ('updated_date', models.DateTimeField(auto_now=True, verbose_name='Запись обновлена')),
                ('groups', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='groups.group', verbose_name='Группа')),
                ('subjects', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='subjects.subject', verbose_name='Дисциплина')),
            ],
            options={
                'verbose_name': 'Назначения дисциплин',
                'verbose_name_plural': 'Назначения дисциплин',
                'ordering': ['groups', 'subjects'],
                'unique_together': {('groups', 'subjects')},
            },
        ),
    ]
